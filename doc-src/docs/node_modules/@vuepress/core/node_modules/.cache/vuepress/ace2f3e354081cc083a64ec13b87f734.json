{"remainingRequest":"C:\\Jaume Balmes\\DAW\\2020-21-DAW2-M12-BookFind\\doc-src\\docs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Jaume Balmes\\DAW\\2020-21-DAW2-M12-BookFind\\doc-src\\docs\\node_modules\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js","dependencies":[{"path":"C:\\Jaume Balmes\\DAW\\2020-21-DAW2-M12-BookFind\\doc-src\\docs\\node_modules\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js","mtime":1620838667291},{"path":"C:\\Jaume Balmes\\DAW\\2020-21-DAW2-M12-BookFind\\doc-src\\docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620838668510},{"path":"C:\\Jaume Balmes\\DAW\\2020-21-DAW2-M12-BookFind\\doc-src\\docs\\node_modules\\babel-loader\\lib\\index.js","mtime":1620838668260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9KYXVtZSBCYWxtZXMvREFXLzIwMjAtMjEtREFXMi1NMTItQm9va0ZpbmQvZG9jLXNyYy9kb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICJDOi9KYXVtZSBCYWxtZXMvREFXLzIwMjAtMjEtREFXMi1NMTItQm9va0ZpbmQvZG9jLXNyYy9kb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHVuaW9uQnkgZnJvbSAnbG9kYXNoL3VuaW9uQnknOwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gY3JlYXRlZCB3aWxsIGJlIGNhbGxlZCBvbiBib3RoIGNsaWVudCBhbmQgc3NyCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2l0ZU1ldGEgPSB0aGlzLiRzaXRlLmhlYWRUYWdzLmZpbHRlcihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAxKSwKICAgICAgICAgIGhlYWRlclR5cGUgPSBfcmVmMlswXTsKCiAgICAgIHJldHVybiBoZWFkZXJUeXBlID09PSAnbWV0YSc7CiAgICB9KS5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSwKICAgICAgICAgIF8gPSBfcmVmNFswXSwKICAgICAgICAgIGhlYWRlclZhbHVlID0gX3JlZjRbMV07CgogICAgICByZXR1cm4gaGVhZGVyVmFsdWU7CiAgICB9KTsKCiAgICBpZiAodGhpcy4kc3NyQ29udGV4dCkgewogICAgICB2YXIgbWVyZ2VkTWV0YUl0ZW1zID0gdGhpcy5nZXRNZXJnZWRNZXRhVGFncygpOwogICAgICB0aGlzLiRzc3JDb250ZXh0LnRpdGxlID0gdGhpcy4kdGl0bGU7CiAgICAgIHRoaXMuJHNzckNvbnRleHQubGFuZyA9IHRoaXMuJGxhbmc7CiAgICAgIHRoaXMuJHNzckNvbnRleHQucGFnZU1ldGEgPSByZW5kZXJQYWdlTWV0YShtZXJnZWRNZXRhSXRlbXMpOwogICAgICB0aGlzLiRzc3JDb250ZXh0LmNhbm9uaWNhbExpbmsgPSByZW5kZXJDYW5vbmljYWxMaW5rKHRoaXMuJGNhbm9uaWNhbFVybCk7CiAgICB9CiAgfSwKICAvLyBPdGhlciBsaWZlIGN5Y2xlcyB3aWxsIG9ubHkgYmUgY2FsbGVkIGF0IGNsaWVudAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBpbml0IGN1cnJlbnRNZXRhVGFncyBmcm9tIERPTQogICAgdGhpcy5jdXJyZW50TWV0YVRhZ3MgPSBfdG9Db25zdW1hYmxlQXJyYXkoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnbWV0YScpKTsgLy8gdXBkYXRlIHRpdGxlIC8gbWV0YSB0YWdzCgogICAgdGhpcy51cGRhdGVNZXRhKCk7CiAgICB0aGlzLnVwZGF0ZUNhbm9uaWNhbExpbmsoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZU1ldGE6IGZ1bmN0aW9uIHVwZGF0ZU1ldGEoKSB7CiAgICAgIGRvY3VtZW50LnRpdGxlID0gdGhpcy4kdGl0bGU7CiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sYW5nID0gdGhpcy4kbGFuZzsKICAgICAgdmFyIG5ld01ldGFUYWdzID0gdGhpcy5nZXRNZXJnZWRNZXRhVGFncygpOwogICAgICB0aGlzLmN1cnJlbnRNZXRhVGFncyA9IHVwZGF0ZU1ldGFUYWdzKG5ld01ldGFUYWdzLCB0aGlzLmN1cnJlbnRNZXRhVGFncyk7CiAgICB9LAogICAgZ2V0TWVyZ2VkTWV0YVRhZ3M6IGZ1bmN0aW9uIGdldE1lcmdlZE1ldGFUYWdzKCkgewogICAgICB2YXIgcGFnZU1ldGEgPSB0aGlzLiRwYWdlLmZyb250bWF0dGVyLm1ldGEgfHwgW107IC8vIHBhZ2VNZXRhVGFncyBoYXZlIGhpZ2hlciBwcmlvcml0eSB0aGFuIHNpdGVNZXRhVGFncwogICAgICAvLyBkZXNjcmlwdGlvbiBuZWVkcyBzcGVjaWFsIGF0dGVudGlvbiBhcyBpdCBoYXMgdG9vIG1hbnkgZW50cmllcwoKICAgICAgcmV0dXJuIHVuaW9uQnkoW3sKICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nLAogICAgICAgIGNvbnRlbnQ6IHRoaXMuJGRlc2NyaXB0aW9uCiAgICAgIH1dLCBwYWdlTWV0YSwgdGhpcy5zaXRlTWV0YSwgbWV0YUlkZW50aWZpZXIpOwogICAgfSwKICAgIHVwZGF0ZUNhbm9uaWNhbExpbms6IGZ1bmN0aW9uIHVwZGF0ZUNhbm9uaWNhbExpbmsoKSB7CiAgICAgIHJlbW92ZUNhbm9uaWNhbExpbmsoKTsKCiAgICAgIGlmICghdGhpcy4kY2Fub25pY2FsVXJsKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBkb2N1bWVudC5oZWFkLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgcmVuZGVyQ2Fub25pY2FsTGluayh0aGlzLiRjYW5vbmljYWxVcmwpKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAkcGFnZTogZnVuY3Rpb24gJHBhZ2UoKSB7CiAgICAgIHRoaXMudXBkYXRlTWV0YSgpOwogICAgICB0aGlzLnVwZGF0ZUNhbm9uaWNhbExpbmsoKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB1cGRhdGVNZXRhVGFncyhudWxsLCB0aGlzLmN1cnJlbnRNZXRhVGFncyk7CiAgICByZW1vdmVDYW5vbmljYWxMaW5rKCk7CiAgfQp9OwoKZnVuY3Rpb24gcmVtb3ZlQ2Fub25pY2FsTGluaygpIHsKICB2YXIgY2Fub25pY2FsRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJsaW5rW3JlbD0nY2Fub25pY2FsJ10iKTsKCiAgaWYgKGNhbm9uaWNhbEVsKSB7CiAgICBjYW5vbmljYWxFbC5yZW1vdmUoKTsKICB9Cn0KCmZ1bmN0aW9uIHJlbmRlckNhbm9uaWNhbExpbmsoKSB7CiAgdmFyIGxpbmsgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICcnOwoKICBpZiAoIWxpbmspIHsKICAgIHJldHVybiAnJzsKICB9CgogIHJldHVybiAiPGxpbmsgaHJlZj1cIiIuY29uY2F0KGxpbmssICJcIiByZWw9XCJjYW5vbmljYWxcIiAvPiIpOwp9Ci8qKg0KICogUmVwbGFjZSBjdXJyZW50TWV0YVRhZ3Mgd2l0aCBuZXdNZXRhVGFncw0KICogQHBhcmFtIHtBcnJheTxPYmplY3Q+fSBuZXdNZXRhVGFncw0KICogQHBhcmFtIHtBcnJheTxIVE1MRWxlbWVudD59IGN1cnJlbnRNZXRhVGFncw0KICogQHJldHVybnMge0FycmF5PEhUTUxFbGVtZW50Pn0NCiAqLwoKCmZ1bmN0aW9uIHVwZGF0ZU1ldGFUYWdzKG5ld01ldGFUYWdzLCBjdXJyZW50TWV0YVRhZ3MpIHsKICBpZiAoY3VycmVudE1ldGFUYWdzKSB7CiAgICBfdG9Db25zdW1hYmxlQXJyYXkoY3VycmVudE1ldGFUYWdzKS5maWx0ZXIoZnVuY3Rpb24gKGMpIHsKICAgICAgcmV0dXJuIGMucGFyZW50Tm9kZSA9PT0gZG9jdW1lbnQuaGVhZDsKICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGMpIHsKICAgICAgcmV0dXJuIGRvY3VtZW50LmhlYWQucmVtb3ZlQ2hpbGQoYyk7CiAgICB9KTsKICB9CgogIGlmIChuZXdNZXRhVGFncykgewogICAgcmV0dXJuIG5ld01ldGFUYWdzLm1hcChmdW5jdGlvbiAobSkgewogICAgICB2YXIgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWV0YScpOwogICAgICBPYmplY3Qua2V5cyhtKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICB0YWcuc2V0QXR0cmlidXRlKGtleSwgbVtrZXldKTsKICAgICAgfSk7CiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGFnKTsKICAgICAgcmV0dXJuIHRhZzsKICAgIH0pOwogIH0KfQovKioNCiAqIFRyeSB0byBpZGVudGlmeSBhIG1ldGEgdGFnIGJ5IG5hbWUsIHByb3BlcnR5IG9yIGl0ZW1wcm9wDQogKg0KICogUmV0dXJuIGEgY29tcGxldGUgc3RyaW5nIGlmIG5vbmUgcHJvdmlkZWQNCiAqIEBwYXJhbSB7T2JqZWN0fSB0YWcgZnJvbSBmcm9udG1hdHRlciBvciBzaXRlTWV0YVRhZ3MNCiAqIEByZXR1cm5zIHtTdHJpbmd9DQogKi8KCgpmdW5jdGlvbiBtZXRhSWRlbnRpZmllcih0YWcpIHsKICBmb3IgKHZhciBfaSA9IDAsIF9hcnIgPSBbJ25hbWUnLCAncHJvcGVydHknLCAnaXRlbXByb3AnXTsgX2kgPCBfYXJyLmxlbmd0aDsgX2krKykgewogICAgdmFyIGl0ZW0gPSBfYXJyW19pXTsKICAgIGlmICh0YWcuaGFzT3duUHJvcGVydHkoaXRlbSkpIHJldHVybiB0YWdbaXRlbV0gKyBpdGVtOwogIH0KCiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRhZyk7Cn0KLyoqDQogKiBSZW5kZXIgbWV0YSB0YWdzDQogKg0KICogQHBhcmFtIHtBcnJheX0gbWV0YQ0KICogQHJldHVybnMge1N0cmluZ30NCiAqLwoKCmZ1bmN0aW9uIHJlbmRlclBhZ2VNZXRhKG1ldGEpIHsKICBpZiAoIW1ldGEpIHJldHVybiAnJzsKICByZXR1cm4gbWV0YS5tYXAoZnVuY3Rpb24gKG0pIHsKICAgIHZhciByZXMgPSAiPG1ldGEiOwogICAgT2JqZWN0LmtleXMobSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgIHJlcyArPSAiICIuY29uY2F0KGtleSwgIj1cIiIpLmNvbmNhdChtW2tleV0sICJcIiIpOwogICAgfSk7CiAgICByZXR1cm4gcmVzICsgIj4iOwogIH0pLmpvaW4oJ1xuICAgICcpOwp9"},{"version":3,"sources":["C:/Jaume Balmes/DAW/2020-21-DAW2-M12-BookFind/doc-src/docs/node_modules/@vuepress/core/lib/client/root-mixins/updateMeta.js"],"names":["unionBy","created","siteMeta","$site","headTags","filter","headerType","map","_","headerValue","$ssrContext","mergedMetaItems","getMergedMetaTags","title","$title","lang","$lang","pageMeta","renderPageMeta","canonicalLink","renderCanonicalLink","$canonicalUrl","mounted","currentMetaTags","document","querySelectorAll","updateMeta","updateCanonicalLink","methods","documentElement","newMetaTags","updateMetaTags","$page","frontmatter","meta","name","content","$description","metaIdentifier","removeCanonicalLink","head","insertAdjacentHTML","watch","beforeDestroy","canonicalEl","querySelector","remove","link","c","parentNode","forEach","removeChild","m","tag","createElement","Object","keys","key","setAttribute","appendChild","item","hasOwnProperty","JSON","stringify","res","join"],"mappings":"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","sourcesContent":["import unionBy from 'lodash/unionBy'\r\n\r\nexport default {\r\n  // created will be called on both client and ssr\r\n  created () {\r\n    this.siteMeta = this.$site.headTags\r\n      .filter(([headerType]) => headerType === 'meta')\r\n      .map(([_, headerValue]) => headerValue)\r\n\r\n    if (this.$ssrContext) {\r\n      const mergedMetaItems = this.getMergedMetaTags()\r\n\r\n      this.$ssrContext.title = this.$title\r\n      this.$ssrContext.lang = this.$lang\r\n      this.$ssrContext.pageMeta = renderPageMeta(mergedMetaItems)\r\n      this.$ssrContext.canonicalLink = renderCanonicalLink(this.$canonicalUrl)\r\n    }\r\n  },\r\n  // Other life cycles will only be called at client\r\n  mounted () {\r\n    // init currentMetaTags from DOM\r\n    this.currentMetaTags = [...document.querySelectorAll('meta')]\r\n\r\n    // update title / meta tags\r\n    this.updateMeta()\r\n    this.updateCanonicalLink()\r\n  },\r\n\r\n  methods: {\r\n    updateMeta () {\r\n      document.title = this.$title\r\n      document.documentElement.lang = this.$lang\r\n\r\n      const newMetaTags = this.getMergedMetaTags()\r\n      this.currentMetaTags = updateMetaTags(newMetaTags, this.currentMetaTags)\r\n    },\r\n\r\n    getMergedMetaTags () {\r\n      const pageMeta = this.$page.frontmatter.meta || []\r\n      // pageMetaTags have higher priority than siteMetaTags\r\n      // description needs special attention as it has too many entries\r\n      return unionBy([{ name: 'description', content: this.$description }],\r\n        pageMeta, this.siteMeta, metaIdentifier)\r\n    },\r\n\r\n    updateCanonicalLink () {\r\n      removeCanonicalLink()\r\n\r\n      if (!this.$canonicalUrl) {\r\n        return\r\n      }\r\n\r\n      document.head.insertAdjacentHTML('beforeend', renderCanonicalLink(this.$canonicalUrl))\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    $page () {\r\n      this.updateMeta()\r\n      this.updateCanonicalLink()\r\n    }\r\n  },\r\n\r\n  beforeDestroy () {\r\n    updateMetaTags(null, this.currentMetaTags)\r\n    removeCanonicalLink()\r\n  }\r\n}\r\n\r\nfunction removeCanonicalLink () {\r\n  const canonicalEl = document.querySelector(\"link[rel='canonical']\")\r\n\r\n  if (canonicalEl) {\r\n    canonicalEl.remove()\r\n  }\r\n}\r\n\r\nfunction renderCanonicalLink (link = '') {\r\n  if (!link) {\r\n    return ''\r\n  }\r\n  return `<link href=\"${link}\" rel=\"canonical\" />`\r\n}\r\n\r\n/**\r\n * Replace currentMetaTags with newMetaTags\r\n * @param {Array<Object>} newMetaTags\r\n * @param {Array<HTMLElement>} currentMetaTags\r\n * @returns {Array<HTMLElement>}\r\n */\r\nfunction updateMetaTags (newMetaTags, currentMetaTags) {\r\n  if (currentMetaTags) {\r\n    [...currentMetaTags]\r\n          .filter(c => c.parentNode === document.head)\r\n          .forEach(c => document.head.removeChild(c))\r\n  }\r\n  if (newMetaTags) {\r\n    return newMetaTags.map(m => {\r\n      const tag = document.createElement('meta')\r\n      Object.keys(m).forEach(key => {\r\n        tag.setAttribute(key, m[key])\r\n      })\r\n      document.head.appendChild(tag)\r\n      return tag\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Try to identify a meta tag by name, property or itemprop\r\n *\r\n * Return a complete string if none provided\r\n * @param {Object} tag from frontmatter or siteMetaTags\r\n * @returns {String}\r\n */\r\nfunction metaIdentifier (tag) {\r\n  for (const item of ['name', 'property', 'itemprop']) {\r\n    if (tag.hasOwnProperty(item)) return tag[item] + item\r\n  }\r\n  return JSON.stringify(tag)\r\n}\r\n\r\n/**\r\n * Render meta tags\r\n *\r\n * @param {Array} meta\r\n * @returns {String}\r\n */\r\n\r\nfunction renderPageMeta (meta) {\r\n  if (!meta) return ''\r\n  return meta.map(m => {\r\n    let res = `<meta`\r\n    Object.keys(m).forEach(key => {\r\n      res += ` ${key}=\"${m[key]}\"`\r\n    })\r\n    return res + `>`\r\n  }).join('\\n    ')\r\n}\r\n"]}]}